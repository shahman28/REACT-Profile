{"version":3,"sources":["components/Page One 2019_Color_-13(1).jpg","components/Navbar.js","components/LandingPage.js","components/huffman.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","id","class","href","target","React","Component","LandingPage","src","picture","alt","loop","Infinity","wrapper","steps","huffman","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,wD,mOCuB5BC,G,6KAjBP,OAGI,6BAEI,wBAAIC,GAAG,OACH,4DACA,wBAAIC,MAAM,OAAM,uBAAGC,KAAK,KAAR,SAChB,wBAAID,MAAM,OAAM,uBAAGC,KAAK,4CAA4CC,OAAO,UAA3D,aAChB,wBAAIF,MAAM,SAAQ,uBAAGC,KAAK,YAAR,sBAClB,wBAAID,MAAM,QAAO,uBAAGC,KAAK,KAAR,kB,GAZhBE,IAAMC,Y,wCC0CZC,E,uKAxCP,OACI,6BACI,yBAAKN,GAAG,SACJ,yBAAKO,IAAKC,IAASC,IAAI,aAEvB,yBAAKT,GAAG,SACJ,oDAIA,6BACA,oCAEA,kBAAC,IAAD,CACQU,KAAMC,IACNC,QAAQ,IACRC,MAAO,CACH,aACA,IACA,qBACA,IACA,iBACA,IACA,gBACA,QAMZ,yBAAKZ,MAAM,c,GAhCTI,aCsCXS,E,uKApCP,OACI,6BACI,yBAAKd,GAAG,SACJ,oDAGA,6BACA,oCAEI,kBAAC,IAAD,CACIU,KAAMC,IACNC,QAAQ,IACRC,MAAO,CACH,aACA,IACA,qBACA,IACA,iBACA,IACA,gBACA,QAMZ,yBAAKZ,MAAM,c,GA5BTI,aC6BPU,MAvBf,WAEE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWZ,IACjC,kBAAC,IAAD,CAAOU,KAAK,6CACV,kBAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,WAAWE,UAAWJ,QCN9BK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9f4e902c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Page One 2019_Color_-13(1).93cd60c7.jpg\";","import React, { Component, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Navbar.css'\n\nclass Navbar extends React.Component {\n    render() {\n        return (\n\n\n            <div>\n\n                <ul id=\"nav\">\n                    <p>Manav Shah's Personal Website</p>\n                    <li class=\"one\"><a href=\"/\">Home</a></li>\n                    <li class=\"two\"><a href=\"https://www.linkedin.com/in/manav-shah28/\" target=\"_blank\">Linkedin</a></li>\n                    <li class=\"three\"><a href=\"/huffman\">huffmanVisualizer</a></li>\n                    <li class=\"four\"><a href=\"#\">Contact</a></li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport './LandingPage.css'\nimport Typical from 'react-typical';\nimport picture from './Page One 2019_Color_-13(1).jpg'\nclass LandingPage extends Component {\n    render() {\n        return (\n            <div>\n                <div id=\"Image\">\n                    <img src={picture} alt=\"picture\" />\n                </div>    \n                    <div id='title'>\n                        <span>\n                            Hi, I'm Manav Shah\n                \n                </span>\n                        <br />\n                        <h3>\n                            I'm a\n                        <Typical\n                                loop={Infinity}\n                                wrapper='r'\n                                steps={[\n                                    ' Developer',\n                                    2000,\n                                    ' Hopeless Romantic',\n                                    2000,\n                                    'n Open Sourcer',\n                                    2000,\n                                    ' Story Teller',\n                                    2000,\n\n                                ]\n                                }\n                            ></Typical>\n                        </h3>\n                        <div class=\"box\">\n                            \n\n                        </div>\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default LandingPage;","import React, { Component } from 'react';\nimport './LandingPage.css'\nimport Typical from 'react-typical';\n\nclass huffman extends Component {\n    render() {\n        return (\n            <div>\n                <div id='title'>\n                    <span>\n                        Hi, I'm Manav Shah\n                </span>\n                    <br />\n                    <h3>\n                        I'm a\n                        <Typical\n                            loop={Infinity}\n                            wrapper='r'\n                            steps={[\n                                ' Developer',\n                                2000,\n                                ' Hopeless Romantic',\n                                2000,\n                                'n Open Sourcer',\n                                2000,\n                                ' Story Teller',\n                                2000,\n\n                            ]\n                            }\n                        ></Typical>\n                    </h3>\n                    <div class=\"box\">\n\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default huffman;","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport { Switch, Route } from 'react-router-dom';\nimport LandingPage from './components/LandingPage';\nimport huffman from './components/huffman'\n\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={LandingPage} />\n        <Route path=\"https://www.linkedin.com/in/manav-shah28/\" >\n          <Route exact path=\"/huffman\" component={huffman} />\n\n        </Route>\n      </Switch>\n    </Router>\n\n  );\n\n}\n\nfunction toLinkedin() {\n  window.location.href = 'https://www.linkedin.com/in/manav-shah28/';\n  return null;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}